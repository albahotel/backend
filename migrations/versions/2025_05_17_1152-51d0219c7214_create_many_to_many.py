"""Create Many-To-Many

Revision ID: 51d0219c7214
Revises: 60af35b25bbd
Create Date: 2025-05-17 11:52:41.198004

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "51d0219c7214"
down_revision: Union[str, None] = "60af35b25bbd"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "booking_customer",
        sa.Column(
            "booking_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.Column(
            "customer_id",
            sa.BigInteger().with_variant(sa.Integer(), "sqlite"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["booking_id"],
            ["bookings.id"],
            name=op.f("fk_booking_customer_booking_id_bookings"),
        ),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["customers.id"],
            name=op.f("fk_booking_customer_customer_id_customers"),
        ),
        sa.PrimaryKeyConstraint(
            "booking_id", "customer_id", name=op.f("pk_booking_customer")
        ),
    )
    op.drop_constraint(
        "fk_customers_booking_id_bookings", "customers", type_="foreignkey"
    )
    op.drop_column("customers", "booking_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "customers",
        sa.Column("booking_id", sa.BIGINT(), autoincrement=False, nullable=False),
    )
    op.create_foreign_key(
        "fk_customers_booking_id_bookings",
        "customers",
        "bookings",
        ["booking_id"],
        ["id"],
    )
    op.drop_table("booking_customer")
    # ### end Alembic commands ###
